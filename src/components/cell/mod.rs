#![allow(unused_variables)]

use crate::CellValue;
use std::marker::PhantomData;

use leptos::prelude::*;

/// The default cell renderer. Uses the `<td>` element.
#[component]
pub fn DefaultTableCellRenderer<T, F, M>(
    /// The class attribute for the cell element. Generated by the classes provider.
    class: String,
    /// The value to display.
    #[prop(into)]
    value: MaybeSignal<T>,
    /// Event handler called when the cell is changed. In this default renderer this will never happen.
    on_change: F,
    /// The index of the column. Starts at 0.
    index: usize,
    options: T::RenderOptions,
    #[prop(optional)] _marker: PhantomData<M>,
) -> impl IntoView
where
    T: CellValue<M> + Send + Sync + Clone + 'static,
    F: Fn(T) + 'static,
{
    view! {
        <td class=class>{move || value.get().render_value(options.clone())}</td>
    }
}
